spring.application.name=meeting_service

# ===============================
# Database (PostgreSQL)
# ===============================

# set up postgresql database
spring.datasource.url=jdbc:postgresql://postgres:5432/meeting_service
#spring.datasource.url=jdbc:postgresql://localhost:5432/meeting_service
spring.datasource.username=postgres
spring.datasource.password=postgres

# set up port
#server.port=8080

# set up flyway
spring.flyway.enabled=true

# ===============================
# Kafka
# ===============================
spring.kafka.bootstrap-servers=kafka:9092
#spring.kafka.bootstrap-servers=localhost:9092


# Consumer config
spring.kafka.consumer.group-id=${random.uuid}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Producer config
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#0: ko can biet kafka da luu thanh cong message vao partition chua ma tra ve ack luon
#1: leader partition luu thanh cong message roi thi tra lai ack, ko quan tam follower partition
#-1 or all: doi khi ca leader va follower partition luu thanh cong message roi moi tra ve ack
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
#retry 3 lan khi gui message fail

#prevent duplicate send
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5


# ===============================
# Logging
# ===============================
# set up log level