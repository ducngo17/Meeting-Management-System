worker_processes auto;

events {
    worker_connections 10240;
}

http {
    map $http_upgrade $connection_upgrade {
            default upgrade;
            ''      close;
    }

    upstream backend_servers {
        server backend:8080;
    }

    server {
        listen 4000;

        # WebSocket endpoint
        location /ws/ {
            proxy_pass http://backend_servers;
            proxy_http_version 1.1;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Main API endpoint with full CORS support
        location / {
            # CORS headers for all responses
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'false' always;
            add_header 'Access-Control-Allow-Origin' 'http://localhost:2000' always;


            # Handle preflight OPTIONS requests
            if ($request_method = OPTIONS) {
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                add_header 'Access-Control-Allow-Origin' 'http://localhost:2000' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
                add_header 'Access-Control-Allow-Credentials' 'false' always;

                return 204;
            }

            proxy_pass http://backend_servers/;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}


